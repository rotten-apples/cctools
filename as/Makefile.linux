NULL =

CFILES = \
	app.c \
	as.c \
	dwarf2dbg.c \
	atof-generic.c \
	atof-ieee.c \
	expr.c \
	fixes.c \
	flonum-const.c \
	flonum-copy.c \
	flonum-mult.c \
	frags.c \
	hash.c \
	hex-value.c \
	input-file.c \
	input-scrub.c \
	layout.c \
	messages.c \
	obstack.c \
	read.c \
	sections.c \
	symbols.c \
	write_object.c \
	xmalloc.c \
	$(NULL)

CFILES_driver = driver.c
COBJS_driver = $(CFILES_driver:%.c=bin/%.o)

ARCH_DIR=libexec/gcc/darwin

CFILES_i386 = $(CFILES) i386.c
COBJS_i386 = $(CFILES_i386:%.c=$(ARCH_DIR)/i386/%.o)

CFILES_x86_64 = $(CFILES_i386)
COBJS_x86_64 = $(CFILES_x86_64:%.c=$(ARCH_DIR)/x86_64/%.o)

CFILES_ppc = $(CFILES) ppc.c
COBJS_ppc = $(CFILES_ppc:%.c=$(ARCH_DIR)/ppc/%.o)

CFILES_ppc64 = $(CFILES_ppc)
COBJS_ppc64 = $(CFILES_ppc64:%.c=$(ARCH_DIR)/ppc64/%.o)

XCFLAGS = -fno-builtin-round -D__LITTLE_ENDIAN__ -D__private_extern__='__attribute__((visibility("hidden")))' -DNeXT_MOD -I../include -I../../usr_include

all: bin/as \
     $(ARCH_DIR)/i386/as \
     $(ARCH_DIR)/x86_64/as \
     $(ARCH_DIR)/ppc/as \
     $(ARCH_DIR)/ppc64/as

bin/as: $(COBJS_driver)
	$(CC) -o $@ $^ -L../libstuff -lstuff

$(COBJS_driver): bin/%.o: %.c
	@mkdir -p $(@D)
	$(CC) $(CFLAGS) $(XCFLAGS) -c -o $@ $<

$(ARCH_DIR)/i386/as: $(COBJS_i386)
	$(CC) -o $@ $^ -L../libstuff -lstuff

$(COBJS_i386): $(ARCH_DIR)/i386/%.o: %.c
	@mkdir -p $(@D)
	$(CC) $(CFLAGS) $(XCFLAGS) -DI386 -c -o $@ $<

$(ARCH_DIR)/x86_64/as: $(COBJS_x86_64)
	$(CC) -o $@ $^ -L../libstuff -lstuff

$(COBJS_x86_64): $(ARCH_DIR)/x86_64/%.o: %.c
	@mkdir -p $(@D)
	$(CC) $(CFLAGS) $(XCFLAGS) -DI386 -DARCH64 -c -o $@ $<

$(ARCH_DIR)/ppc/as: $(COBJS_ppc)
	$(CC) -o $@ $^ -L../libstuff -lstuff

$(COBJS_ppc): $(ARCH_DIR)/ppc/%.o: %.c
	@mkdir -p $(@D)
	$(CC) $(CFLAGS) $(XCFLAGS) -DPPC -c -o $@ $<

$(ARCH_DIR)/ppc64/as: $(COBJS_ppc64)
	$(CC) -o $@ $^ -L../libstuff -lstuff

$(COBJS_ppc64): $(ARCH_DIR)/ppc64/%.o: %.c
	@mkdir -p $(@D)
	$(CC) $(CFLAGS) $(XCFLAGS) -DPPC -DARCH64 -c -o $@ $<

clean:
	-rm -rf bin libexec
